#!/usr/bin/python

# Copyright (C) 2009 Janne Blomqvist

# Generate everything needed for a coarse-grained BPA-PC system
# with 80 chains and 43 beads per chain in a 7x7x7 nm box

import cgpoly.espresso2gro_table as e2g
import cgpoly.gen_nb_tables
import cgpoly.chain_top
import cgpoly.gen_poly
from cgpoly.params import *
from optparse import OptionParser

usage = """%prog [options] outfile

Generate BPA-PC polymer coordinates, storing them into the outfile in
GRO format. Also generates index files for the angles PCP-angles.ndx,
PIP-angles.ndx, IPC-angles.ndx that can be used with g_angle."""

parser = OptionParser(usage)
parser.add_option('-b', '--beads-per-chain', dest='bpc', help='Number of beads per chain')
parser.add_option('-n', '--num-chains', dest='nchains', help='Number of chains')
parser.add_option('-s', '--size', dest='size', help='Size of simulation cube side')
parser.add_option('-a', '--angle', dest='angle', help='Angle between beads')
(options, args) = parser.parse_args()
if options.bpc:
    bpc = int(options.bpc)
else:
    bpc = 43
if options.nchains:
    nchains = int(options.nchains)
else:
    nchains = 80
if options.size:
    s = float(options.size)
    box = (s, s, s)
else:
    box = (7, 7, 7)

# Average bead-bead distance
dist = (cp_r + ip_r) / 2

# Convert Espresso format tables for bonded angle potentials to
# Gromacs format
exp_pcp = e2g.espresso2gro_convert_table('PCP_TABLE.DAT', 'table_a0.xvg')
exp_pip = e2g.espresso2gro_convert_table('PIP_TABLE.DAT', 'table_a1.xvg')


# Average angle
# angles in monomer: PCP, IPC, PIP, IPC
if options.angle:
    angle = float(options.angle)
else:
    # Average IPC angle is 175.7 deg taken from an equilibrated simulation
    # (obviously can't never be 180)
    # angle = (exp_pcp + exp_pip + 2*175.731)/4
    # However, this angle produces a too large radius of gyration, so just
    # use one that has been determined to produce the correct one
    angle = 141

# Generate coordinates
gen_bpapc(args[0], bpc, nchains, box, (True, True, True), dist, angle)


# Table files with non-bonded interactions (WCA potentials)
gen_nb_tables.gen_nb_files()

# Chain topology and bonded interactions
chain_top.genchain_top(bpc, 'bpapc43.itp')
